extends layout

block content
  br
  br
  h1 Anwendungsseite
  p Auf der Anwendungsseite finden Sie einen Bereich zum Datenupload. Sie können entweder Trainingsdaten, ein trainiertes Modell oder eine Sentinel 2 Bilddatei hochladen. Außerdem können Sie hier verschiedene Parameter einstellen und schließlich die Durchführung der AOA-Berechnung, das Trainieren des Algortihmus und das Anzeigen der Bereiche, in denen weitere Trainingsdaten erhoben werden müssen, starten.

  .row.justify-content-md-left
        .col-lg-6.col-xs-12.mb-3
              #anwendungsmap

        .col-lg-6.col-xs-12.mb-3
            .card.text-dark.p-4.border-success.cardanwendungsseite
              h3 Durchführungsschritte

              b 1. Bereich wählen:
              p Zeichnen Sie links auf der Karte mit dem Leaflet Draw Plugin einen rechteckigen Bereich, mit welchem Sie arbeiten möchten.

              b 2. Datenupload:
              p Laden Sie Ihre Daten, welche zur Durchführung benötigt werden hoch!

              b 2.1 Sentinel 2 Bild als .tif </b>
              form(method='post', enctype='multipart/form-data', action='/uploadsentinel')
                input(type='file', name='file' , accept=".tif")
                input(type='submit', value='Submit')
                p(style="font-size: small") Das Anzeigen kann bis zu eine Minute dauern, bitte haben Sie Geduld!

              b 2.2 Sektion Trainingsdaten:

              b(style="color:darkgray") 2.2.1 Trainingspolygone als GeoPackage oder GeoJSON:
              form(method='post', enctype='multipart/form-data', action='/uploadtrainingsdata' )
                input(type='file', name='file', accept=".gpkg, .geojson")
                input(type='submit', value='Submit')
              p(style="font-size: small") Bei GeoPackage den Layer, welcher auf der Karte angezeigt werden soll bitte "Layer1" nennen

              b(style="color:darkgray") 2.2.2 Zusatz: Trainingspolygone als Shapefile als .zip
              form(method='post', enctype='multipart/form-data', action='/uploadtrainingsdatashp' )
                input(type='file', name='file', accept=".zip")
                input(type='submit', value='Submit')
              p(style="font-size: small") Bitte die .shp Datei als "usertrainingspolygoneshp.shp" benennen!                

              b 2.3 trainiertes Modell (ohne .rds)
              form(method='post', enctype='multipart/form-data', action='/uploadmodel')
                input(type='file', name='file' accept=" ")
                input(type='submit', value='Submit')
              p 

              b 3. Auflösung wählen
                .dropdown
                  button.btn.btndropdown.btn-success.dropdown-toggle(type='button' data-bs-toggle='dropdown' aria-expanded='false')
                    | Auflösung
                  .dropdown-menu
                    .form-check
                      input#flexRadioDefault10m.form-check-input(type='radio', name='flexRadioDefault')
                      label.form-check-label(for='flexRadioDefault10m')
                        | 10 Meter
                    .form-check
                      input#flexRadioDefault20m.form-check-input(type='radio', name='flexRadioDefault')
                      label.form-check-label(for='flexRadioDefault20m')
                        | 20 Meter
                    .form-check
                      input#flexRadioDefault30m.form-check-input(type='radio', name='flexRadioDefault')
                      label.form-check-label(for='flexRadioDefault20m')
                        | 30 Meter
              p 

              b 4. Ausführen
              p
              .w3-row
                .w3-half
                  form(method='post', action='/anwendungsseite/ergebnisseitegpkg')
                   button.btn.btn-success() Ausführen mit geoPackage Trainingsdaten
                  br
                .w3-half
                  form(method='post', action='/anwendungsseite/ergebnisseitegjson')
                   button.btn.btn-success() Ausführen mit GeoJSON Trainingsdaten
              .w3-row
                .w3-half
                  form(method='post', action='/anwendungsseite/ergebnisseiteshape')
                    button.btn.btn-success() Ausführen mit Shapefile Trainingsdaten
                .w3-half
                 form(method='post', action='/anwendungsseite/ergebnisseitemodel')
                    button.btn.btn-success() Ausführen mit trainiertem Modell
              
              
              


  script(src="/javascripts/application.js")
  
  script.
    // Script for side navigation
    function w3_open() {
    var x = document.getElementById("mySidebar");
    x.style.width = "300px";
    x.style.paddingTop = "10%";
    x.style.display = "block";
    }
    // Close side navigation
    function w3_close() {
    document.getElementById("mySidebar").style.display = "none";
    }
    // Used to toggle the menu on smaller screens when clicking on the menu button
    function openNav() {
    var x = document.getElementById("navDemo");
    if (x.className.indexOf("w3-show") == -1) {
    x.className += " w3-show";
    } else {
    x.className = x.className.replace(" w3-show", "");
    }
    }
 
